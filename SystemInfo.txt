----------------------------------------------------------------------------------------------------
Setting Up Your Network for ROS | Getting Ready to Build Robots with ROS #2
----------------------------------------------------------------------------------------------------

Created new network config file in /etc/netplan/ called "02-network-manager-all.yaml"
 - Use command "sudo pluma /etc/netplan/02-network-manager-all.yaml"

Installed openssh-server using "sudo apt install openssh-server"

To access Robot Pi remotely, use "ssh baaa@192.168.1.132"
To access Dev Machine remotely, use "ssh baaa@192.168.1.173"



----------------------------------------------------------------------------------------------------
How to install ROS | Getting Ready to Build Robots with ROS #3
----------------------------------------------------------------------------------------------------

Install ROS 2 Humble vis Debian Packages

Commands are as follows:

    sudo apt update && sudo apt install curl gnupg2 lsb-release

    sudo curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key  -o /usr/share/keyrings/ros-archive-keyring.gpg

    echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/ros2.list > /dev/null

    sudo apt update

    sudo apt install ros-humble-desktop

    sudo apt install ros-humble-ros-base

Testing to ensure everything works

    source /opt/ros/humble/setup.bash

    On Dev Machine: ros2 run demo_nodes_py listener
    On Robot Pi: ros2 run demo_nodes_py talker

 ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- 

Installing Colcon & Exstensions

Commands are as follows:

    sudo apt install python3-colcon-common-extensions

Testing to ensure everything works

    colcon

 ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- 

Adding ROS2 Humble Source to bashrc file

Commands are as follows:

    echo "source /opt/ros/humble/setup.bash" >> ~/.bashrc

Now talker and listener demo should work without source command

Testing to ensure everything works

    On Dev Machine: ros2 run demo_nodes_cpp listener
    On Robot Pi: ros2 run demo_nodes_cpp talker



----------------------------------------------------------------------------------------------------
10 Things You Need To Know About ROS! | Getting Ready to Build Robots with ROS #4
----------------------------------------------------------------------------------------------------

This is just a video explaining the concepts and tools within ROS or more specifically ROS2



----------------------------------------------------------------------------------------------------
Making Your First ROS Package | Getting Ready to Build Robots with ROS #5
----------------------------------------------------------------------------------------------------

Creating a ROS2 Workspace enviornment

    LINK: https://articulatedrobotics.xyz/ready-for-ros-5-packages/

Install git

Generate SSH key on home

    ssh-keygen

Copy SSH key

Add to github profile

Setup repository and follow instructions for SSH, not HTTPS



----------------------------------------------------------------------------------------------------
The ROS Transformation System (TF) | Getting Ready to Build Robots with ROS #6
----------------------------------------------------------------------------------------------------

This is just a video explaining the concepts and math behind Transforms (Covered in intro to robotics)

It is a very insightful video talking about frames, directions, vectors, and applications



----------------------------------------------------------------------------------------------------
How do we describe a robot? With URDF! | Getting Ready to Build Robots with ROS #7
----------------------------------------------------------------------------------------------------

This video is where we start our project repository called my_bot and create a URDF based on the 
3D model that I printed for our senior design project.

Looks at URDF, XACRO, and best practices



----------------------------------------------------------------------------------------------------
Simulating Robots with gazebo and ROS | Getting Ready to Build Robots with ROS #8
----------------------------------------------------------------------------------------------------

Installing Gazebo

    sudo apt install ros-humble-gazebo-ros-pkgs

Test installation
    
    gazebo /usr/share/gazebo-11/worlds/seesaw.world



----------------------------------------------------------------------------------------------------
Making a Mobile Robot #2 - Creating a rough 3D model of our robot with URDF
----------------------------------------------------------------------------------------------------

This is the video that explains how to start making a URDF of our robot. Since our robot is 
different than the one in the video, our files will not look exactly the same.

Installing xacro and joint state publisher gui at the root of each machine

    sudo apt install ros-humble-xacro ros-humble-joint-state-publisher-gui

Note: Using colcon build --symlink-install will update all files as they are saved. You only need to
      use it again if you add another file to your build

To run simulation:

    Note: Before you get started make sure to source build from dev_ws/
        source install/setup.bash
        
    1. Run Robot State Publisher with the following command from dev_ws/
        ros2 launch my_bot rsp.launch.py
        
    2. Run Joint State Publisher with the following command from dev_ws/
        ros2 run joint_state_publisher_gui joint_state_publisher_gui
        
    3. Run RVIZ using the following configuration command from dev_ws/
        rviz2 -d src/my_bot/config/view_bot.rviz 



----------------------------------------------------------------------------------------------------
Making a Mobile Robot #3 - Concept Design Gazebo
----------------------------------------------------------------------------------------------------

Note: Before you get started make sure to source build from dev_ws/
    source install/setup.bash

1. Launch robot_state_publisher in sim mode
    ros2 launch my_bot rsp.launch.py use_sim_time:=true

2. Launch Gazebo with ROS compatibility
    2.1. Install Gazebo on first
        sudo apt install ros-humble-gazebo-ros-pkgs
    2.2. Run gazebo in new terminal
        ros2 launch gazebo_ros gazebo.launch.py

3. Spawn robot in gazebo with spawn script
    Note: bot_name can be changed since it is only what is displayed in gazebo
        ros2 run gazebo_ros spawn_entity.py -topic robot_description -entity bot_name

Now create a launch file to run all 3 of these at once. The file is called launch_sim.launch.py.
Use the following command to call it.
    ros2 launch my_bot launch_sim.launch.py

Create Differential drive control file "gazebo_control.xacro"
    colcon build --symlink-install

Run gazebo with keyboard controll. Run each command in a different terminal.
    ros2 launch my_bot launch_sim.launch.py
    ros2 run teleop_twist_keyboard teleop_twist_keyboard

Run gazebo in test world. Run each command in a different terminal.
    ros2 launch my_bot launch_sim.launch.py world:=./src/my_bot/worlds/obstacles.world
    ros2 run teleop_twist_keyboard teleop_twist_keyboard



----------------------------------------------------------------------------------------------------
XBOX CONTROLLER TESTING
----------------------------------------------------------------------------------------------------

Here i am attempting to get an xbox 360 controller to work with the Pi over bluetooth.
 - If this fails, I have a logitech controller on order with a USB bluetooth adapter

 Terminal Commands:
 
    sudo -s

    sudo echo 'Y' > /sys/module/bluetooth/parameters/disable_ertm
    
New Terminal:

    Sudo apt install joystick
    
    Sudo apt install jstest-gtk

At this point we purchased a wireless logitech controller with its own usb adapter for connecting
to the controller. This has proven to be very effective and only cost $15.



----------------------------------------------------------------------------------------------------
Making a Mobile Robot #4 - Raspberry Pi
----------------------------------------------------------------------------------------------------

Done



----------------------------------------------------------------------------------------------------
Making a Mobile Robot #5 - Power Concepts
----------------------------------------------------------------------------------------------------

Done



----------------------------------------------------------------------------------------------------
Making a Mobile Robot #6 - 	Robot Power 2: Electric Boogaloo
----------------------------------------------------------------------------------------------------

Done



----------------------------------------------------------------------------------------------------
Making a Mobile Robot #7 - The Ultimate Guide to using Motors in Robotics (including ROS, Raspberry Pi)
----------------------------------------------------------------------------------------------------

Done - Note we are using a arduino mega and 4 motors as opposed to an aruino nano and 2 motors.
       Because of this, I am going to have to write my own ROS to arduino Bridge.

Motors are connected to arduino mega via a breadboard and motor controllers.
Now I am getting the software running in order to move the motoros.

Download joshnewans github code to test motors.

Commands in Terminal
    
    sudo apt install python3-serial



----------------------------------------------------------------------------------------------------
Making a Mobile Robot #8 - Adding a Lidar
----------------------------------------------------------------------------------------------------



----------------------------------------------------------------------------------------------------
Making a Mobile Robot #9 - Adding a Camera
----------------------------------------------------------------------------------------------------

